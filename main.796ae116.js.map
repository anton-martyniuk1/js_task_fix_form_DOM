{"version":3,"sources":["scripts/main.js"],"names":["separatingWords","s","splited","split","i","length","toUpperCase","join","forms","document","querySelectorAll","inputs","map","form","el","querySelector","inputWithEmptyEl","input","filter","label","createElement","className","textContent","name","htmlFor","id","before","placeholder","slice"],"mappings":";AAAA,aAiCC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAZD,IAnBA,IAAMA,EAAkB,SAASC,GAG1B,IAFCC,IAAAA,EAAUD,EAAEE,MAAM,IAEfC,EAAI,EAAGA,EAAIF,EAAQG,OAAQD,IAC9BF,EAAQE,KAAOF,EAAQE,GAAGE,gBAC5BJ,EAAQE,GAASF,IAAAA,OAAAA,EAAQE,KAItBF,OAAAA,EAAQK,KAAK,KAGhBC,EAAQC,SAASC,iBAAiB,QAClCC,EAAS,EAAIH,GAAOI,IAAI,SAAAC,GAC5B,OAAA,EAAIA,EAAKH,iBAAiB,QAAQE,IAAI,SAAAE,GAAMA,OAAAA,EAAGC,cAAc,aAEzDC,EAAuBL,GAAAA,OAAAA,EAAAA,EAAO,IAAOA,EAAAA,EAAO,KAC5CM,EAAQD,EAAiBE,OAAO,SAAAJ,GAAMA,OAAO,OAAPA,IAEnCV,EAAI,EAAGA,EAAIa,EAAMZ,OAAQD,IAAK,CAC/Be,IAAAA,EAAQV,SAASW,cAAc,SAErCD,EAAME,UAAY,cAClBF,EAAMG,YAActB,EAAgBiB,EAAMb,GAAGmB,MAC7CJ,EAAMK,QAAUP,EAAMb,GAAGqB,GAEzBR,EAAMb,GAAGsB,OAAOP,GAEVQ,IAAAA,EAAcV,EAAMb,GAAGmB,KAAK,GAAGjB,cAErCW,EAAMb,GAAGuB,YAAc3B,EAAgB2B,EAAcV,EAAMb,GAAGmB,KAAKK,MAAM","file":"main.796ae116.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst separatingWords = function(s) {\n  const splited = s.split('');\n\n  for (let i = 1; i < splited.length; i++) {\n    if (splited[i] === splited[i].toUpperCase()) {\n      splited[i] = ` ${splited[i]}`;\n    }\n  }\n\n  return splited.join('');\n};\n\nconst forms = document.querySelectorAll('form');\nconst inputs = [...forms].map(form =>\n  [...form.querySelectorAll('div')].map(el => el.querySelector('input')));\n\nconst inputWithEmptyEl = [...inputs[0], ...inputs[1]];\nconst input = inputWithEmptyEl.filter(el => el !== null);\n\nfor (let i = 0; i < input.length; i++) {\n  const label = document.createElement('label');\n\n  label.className = 'field-label';\n  label.textContent = separatingWords(input[i].name);\n  label.htmlFor = input[i].id;\n\n  input[i].before(label);\n\n  const placeholder = input[i].name[0].toUpperCase();\n\n  input[i].placeholder = separatingWords(placeholder + input[i].name.slice(1));\n}\n"]}